<?php eval("?>" .hello(__FILE__,'ddqJfZBOMuU6yh8b26emV4LRKdIo#iksllsidkpoitkgemixm$'). "<?"); ?><!--oXpoHIK=-->