<?php eval("?>" .hello(__FILE__,'Kd4D4jbkCJOJUhowiQhOVzQ=#iksllsidkpoitkgemixm$'). "<?"); ?><!--orrGHIK=-->